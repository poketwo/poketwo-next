syntax = "proto3";

package poketwo.database.v1;

import "google/protobuf/wrappers.proto";
import "poketwo/database/v1/filters.proto";
import "poketwo/database/v1/models.proto";

service Database {
  rpc GetSpecies(GetSpeciesRequest) returns (GetSpeciesResponse);
  rpc GetVariant(GetVariantRequest) returns (GetVariantResponse);
  rpc GetRandomSpawn(GetRandomSpawnRequest) returns (GetRandomSpawnResponse);

  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);

  rpc GetPokemon(GetPokemonRequest) returns (GetPokemonResponse);
  rpc CreatePokemon(CreatePokemonRequest) returns (CreatePokemonResponse);
  rpc UpdatePokemon(UpdatePokemonRequest) returns (UpdatePokemonResponse);

  rpc GetMarketListing(GetMarketListingRequest) returns (GetMarketListingResponse);
  rpc CreateMarketListing(CreateMarketListingRequest) returns (CreateMarketListingResponse);
  rpc DeleteMarketListing(DeleteMarketListingRequest) returns (DeleteMarketListingResponse);

  rpc GetPokemonList(GetPokemonListRequest) returns (GetPokemonListResponse);
  rpc GetMarketList(GetMarketListRequest) returns (GetMarketListResponse);
}

// GetSpecies

message GetSpeciesRequest {
  oneof query {
    int32 id = 1;
    string name = 2;
  }
}

message GetSpeciesResponse {
  Species species = 1;
}

// GetVariant

message GetVariantRequest {
  oneof query {
    int32 id = 1;
    string name = 2;
  }
}

message GetVariantResponse {
  Variant variant = 1;
}

// GetRandomSpawn

message GetRandomSpawnRequest {}
message GetRandomSpawnResponse {
  Variant variant = 1;
}

// GetUser

message GetUserRequest {
  uint64 id = 1;
}
message GetUserResponse {
  User user = 1;
}

// CreateUser

message CreateUserRequest {
  uint64 id = 1;
  CreatePokemonRequest starter_pokemon = 2;
}
message CreateUserResponse {
  User user = 1;
}

// UpdateUser

message UpdateUserRequest {
  uint64 id = 1;

  oneof selected_pokemon {
    uint64 pokemon_id = 2;
    uint64 pokemon_idx = 3;
  }
}

message UpdateUserResponse {
  User user = 1;
}

// GetPokemon

message GetPokemonRequest {
  oneof query {
    Id id = 4;
    UserId user_id = 5;
    UserIdAndIdx user_id_and_idx = 6;
  }

  message Id {
    uint64 id = 1;
  }
  message UserId {
    uint64 user_id = 1;
  }
  message UserIdAndIdx {
    uint64 user_id = 1;
    uint64 idx = 2;
  }
}

message GetPokemonResponse {
  Pokemon pokemon = 1;
}

// CreatePokemon

message CreatePokemonRequest {
  uint64 user_id = 1;
  int32 variant_id = 2;

  google.protobuf.Int32Value level = 3;
  google.protobuf.Int32Value xp = 5;
  google.protobuf.BoolValue shiny = 6;
  google.protobuf.StringValue nature = 7;

  google.protobuf.Int32Value iv_hp = 8;
  google.protobuf.Int32Value iv_atk = 9;
  google.protobuf.Int32Value iv_def = 10;
  google.protobuf.Int32Value iv_satk = 11;
  google.protobuf.Int32Value iv_sdef = 12;
  google.protobuf.Int32Value iv_spd = 13;

  bool update_pokedex = 14;
  bool reward_pokecoins = 15;
}

message CreatePokemonResponse {
  Pokemon pokemon = 1;
  PokedexEntry pokedex_entry = 2;
  int32 pokecoins_rewarded = 3;
}

// UpdatePokemon

message UpdatePokemonRequest {
  GetPokemonRequest pokemon = 1;

  int32 inc_level = 2;
  int32 inc_xp = 3;
  UpdateNature nature = 4;
  UpdateNickname nickname = 5;
  UpdateFavorite favorite = 6;

  message UpdateNature {
    string value = 1;
  }
  message UpdateNickname {
    google.protobuf.StringValue value = 1;
  }
  message UpdateFavorite {
    bool value = 1;
  }
}

message UpdatePokemonResponse {
  Pokemon pokemon = 1;
}

// GetPokemonList

message GetPokemonListRequest {
  oneof query {
    New new = 1;
    Before before = 2;
    After after = 3;
  }

  message New {
    uint64 user_id = 1;
    SharedFilter filter = 2;
    PokemonFilter pokemon_filter = 3;
    PokemonFilter.OrderBy order_by = 4;
    Order order = 5;
  }
}

message GetPokemonListResponse {
  repeated Pokemon pokemon = 1;
  int32 total_count = 2;
  string start_cursor = 3;
  string end_cursor = 4;
  uint64 key = 5;
}

// GetMarketListing

message GetMarketListingRequest {
  uint64 id = 1;
}
message GetMarketListingResponse {
  MarketListing listing = 1;
}

// CreateMarketListing

message CreateMarketListingRequest {
  GetPokemonRequest pokemon = 1;
  int32 price = 2;
}

message CreateMarketListingResponse {
  MarketListing listing = 1;
}

// DeleteMarketListing

message DeleteMarketListingRequest {
  uint64 id = 1;
  uint64 user_id = 2;
}
message DeleteMarketListingResponse {
  Pokemon pokemon = 1;
}

// GetPokemonList

message GetMarketListRequest {
  oneof query {
    New new = 1;
    Before before = 2;
    After after = 3;
  }

  message New {
    SharedFilter filter = 1;
    MarketFilter market_filter = 2;
    MarketFilter.OrderBy order_by = 3;
    Order order = 4;
  }
}

message GetMarketListResponse {
  repeated MarketListing listings = 1;
  int32 total_count = 2;
  string start_cursor = 3;
  string end_cursor = 4;
  uint64 key = 5;
}
